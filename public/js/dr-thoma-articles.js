!function(Q){var F={};function B(n){if(F[n])return F[n].exports;var U=F[n]={i:n,l:!1,exports:{}};return Q[n].call(U.exports,U,U.exports,B),U.l=!0,U.exports}B.m=Q,B.c=F,B.d=function(Q,F,n){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:n})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var n=Object.create(null);if(B.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var U in Q)B.d(n,U,function(F){return Q[F]}.bind(null,U));return n},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=8)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/**\n * @param [string] - a string of html tags\n * nodeFrag takes a string and returns it as a node element fragment\n */\nvar nodeFrag = function nodeFrag(string) {\n  return document.createRange().createContextualFragment(string);\n};\n\n/* harmony default export */ __webpack_exports__["a"] = (nodeFrag);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvdXRpbHMvaHRtbC5qcz81ODExIl0sIm5hbWVzIjpbIm5vZGVGcmFnIiwic3RyaW5nIiwiZG9jdW1lbnQiLCJjcmVhdGVSYW5nZSIsImNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFJQSxJQUFNQSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFDQyxNQUFEO0FBQUEsU0FDZkMsUUFBUSxDQUFDQyxXQUFULEdBQXVCQyx3QkFBdkIsQ0FBZ0RILE1BQWhELENBRGU7QUFBQSxDQUFqQjs7QUFJZUQsaUVBQWYiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHBhcmFtIFtzdHJpbmddIC0gYSBzdHJpbmcgb2YgaHRtbCB0YWdzXG4gKiBub2RlRnJhZyB0YWtlcyBhIHN0cmluZyBhbmQgcmV0dXJucyBpdCBhcyBhIG5vZGUgZWxlbWVudCBmcmFnbWVudFxuICovXG5jb25zdCBub2RlRnJhZyA9IChzdHJpbmcpID0+IChcbiAgZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQoc3RyaW5nKVxuKTtcblxuZXhwb3J0IGRlZmF1bHQgbm9kZUZyYWc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return WP_MAIN_NAV; });\n/* unused harmony export MAIN_NAV */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return REVIEWS_ONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return REVIEWS_TWO; });\nvar WP_MAIN_NAV = ['infinite-mind-retreat-1'];\nvar MAIN_NAV = ['treatments', 'testimonials', 'articles', 'forms', 'contact'];\nvar REVIEWS_ONE = 'uxte1J82H2vgWAbiXjypx3VRQYUQFwvYoHsy9HQWbYlSE4USBY';\nvar REVIEWS_TWO = 'Gx4RiWADI875OX4K4uiWJiVqmbm5cpGf8UM9DT6WYRBQB5PJOK';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY29uc3RhbnRzLmpzPzU5ZjkiXSwibmFtZXMiOlsiV1BfTUFJTl9OQVYiLCJNQUlOX05BViIsIlJFVklFV1NfT05FIiwiUkVWSUVXU19UV08iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQU8sSUFBTUEsV0FBVyxHQUFHLENBQUMseUJBQUQsQ0FBcEI7QUFDUCxJQUFNQyxRQUFRLEdBQUcsQ0FDZixZQURlLEVBRWYsY0FGZSxFQUdmLFVBSGUsRUFJZixPQUplLEVBS2YsU0FMZSxDQUFqQjtBQU9BLElBQU1DLFdBQVcsR0FBRyxvREFBcEI7QUFDQSxJQUFNQyxXQUFXLEdBQUcsb0RBQXBCIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgV1BfTUFJTl9OQVYgPSBbJ2luZmluaXRlLW1pbmQtcmV0cmVhdC0xJ107XG5jb25zdCBNQUlOX05BViA9IFtcbiAgJ3RyZWF0bWVudHMnLFxuICAndGVzdGltb25pYWxzJyxcbiAgJ2FydGljbGVzJyxcbiAgJ2Zvcm1zJyxcbiAgJ2NvbnRhY3QnLFxuXTtcbmNvbnN0IFJFVklFV1NfT05FID0gJ3V4dGUxSjgySDJ2Z1dBYmlYanlweDNWUlFZVVFGd3ZZb0hzeTlIUVdiWWxTRTRVU0JZJztcbmNvbnN0IFJFVklFV1NfVFdPID0gJ0d4NFJpV0FESTg3NU9YNEs0dWlXSmlWcW1ibTVjcEdmOFVNOURUNldZUkJRQjVQSk9LJztcblxuZXhwb3J0IHtcbiAgTUFJTl9OQVYsXG4gIFJFVklFV1NfT05FLFxuICBSRVZJRVdTX1RXTyxcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return routes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return onRouterEventHandler; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _utils_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n\n\nvar _window$location = window.location,\n    origin = _window$location.origin,\n    pathname = _window$location.pathname;\nvar body = document.querySelector('body');\nvar container = document.querySelector('.container'); // live site at infinityspine.com\n\nvar root = '/'; // localhost apache server\n// if (pathname === '/infinity-spine/public/') {\n//   root = '/infinity-spine/public/';\n// }\n// localhost apache server\n\nif (pathname.includes('/infinity-spine/public/')) {\n  root = '/infinity-spine/public/';\n} // when site runs on new.infinityspine.com\n// folder is public_html/new/\n\n\nif (pathname === '/new/') {\n  root = '/new/';\n}\n\nvar routes = ['#nucca-chiropractic', '#sports-physiotherapy', '#functional-medicine', '#red-near-infrared-therapy', '#mission-vision', '#about-dr-thoma', '#corrective-exercises', '#performance-exercise', '#customized-nutrition', '#welcome', '#dr-thoma-articles', '#new-patient-forms', '#faqs', '#more-testimonials', '#contact', '#directions', '#home'];\nvar page = window.location.hash;\n\nfunction testimonialTags(token) {\n  // TODO: look for a better solution... Cache the original HTML?\n  var scriptToken = document.createElement('script');\n  scriptToken.setAttribute('type', 'text/javascript');\n  scriptToken.innerHTML = \"\\n    var review_token = \\\"\".concat(token, \"\\\"; \\n    var review_target = 'review-container';\\n  \");\n  var scriptReview = document.createElement('script');\n  scriptReview.setAttribute('type', 'text/javascript');\n  scriptReview.setAttribute('src', 'https://reviewsonmywebsite.com/js/embed.js?v=7');\n  var reviewContainer = document.createElement('div');\n  reviewContainer.id = 'review-container';\n  return [scriptToken, scriptReview, reviewContainer];\n}\n\nfunction getRouteContent(newRoute, anchor, article, pageId) {\n  fetch(\"\".concat(origin).concat(root, \"pages/\").concat(newRoute, \".html\")).then(function (response) {\n    return response.text();\n  }).then(function (response) {\n    // remove javascript page <script><\/script> if it exists\n    var pageScript = document.querySelectorAll(\"[src=\\\"js/\".concat(page.replace('#', ''), \".js\\\"]\"));\n\n    if (pageScript) {\n      pageScript.forEach(function (script) {\n        body.removeChild(script);\n      });\n    } // reset page, why?\n    // change page to pageRoute\n\n\n    page = newRoute;\n    var frag = Object(_utils_html__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(response); // update \"master page\"\n    // container.innerHTML = response;\n\n    container.innerHTML = '';\n    container.appendChild(frag);\n  }).then(function () {\n    var script = document.createElement('script');\n    script.setAttribute('id', page);\n\n    switch (page) {\n      case 'home' || false:\n        {\n          var reviews = document.querySelector('.testimonials .mdc-layout-grid__cell');\n          script.setAttribute('src', 'js/home.js'); // insert page specific javascript\n\n          body.appendChild(script);\n          testimonialTags(_constants__WEBPACK_IMPORTED_MODULE_0__[/* REVIEWS_ONE */ \"a\"]).forEach(function (node) {\n            return reviews.appendChild(node);\n          });\n\n          if (!anchor) {\n            window.history.replaceState({}, '', '#home');\n          }\n\n          break;\n        }\n\n      case 'contact':\n        {\n          var contactScript = document.querySelectorAll('[src=\"js/contact.js\"]');\n\n          if (contactScript.length === 0) {\n            script.setAttribute('src', 'js/contact.js');\n            body.appendChild(script);\n          }\n\n          if (!anchor) {\n            window.history.replaceState({}, '', '#contact');\n          }\n\n          break;\n        }\n\n      case 'directions':\n        {\n          var _contactScript = document.querySelectorAll('[src=\"js/directions.js\"]');\n\n          if (_contactScript.length === 0) {\n            script.setAttribute('src', 'js/directions.js');\n            body.appendChild(script);\n          }\n\n          if (!anchor) {\n            window.history.replaceState({}, '', '#directions');\n          }\n\n          break;\n        }\n\n      case 'dr-thoma-articles':\n        {\n          var articlesScript = document.querySelectorAll('[src=\"js/dr-thoma-articles.js\"]');\n\n          if (articlesScript) {\n            articlesScript.forEach(function (s) {\n              body.removeChild(s);\n            });\n          }\n\n          script.setAttribute('src', 'js/dr-thoma-articles.js');\n          body.appendChild(script);\n\n          if (!anchor) {\n            window.history.replaceState({}, '', \"#dr-thoma-articles?article=\".concat(article));\n          }\n\n          break;\n        }\n\n      case 'more-testimonials':\n        {\n          var _reviews = document.querySelector('.testimonials .mdc-layout-grid__cell');\n\n          testimonialTags(_constants__WEBPACK_IMPORTED_MODULE_0__[/* REVIEWS_TWO */ \"b\"]).forEach(function (node) {\n            return _reviews.appendChild(node);\n          });\n          break;\n        }\n\n      case 'default-page':\n        {\n          var defaultPageScript = document.querySelectorAll('[src=\"js/default-page.js\"]');\n\n          if (defaultPageScript.length === 0) {\n            script.setAttribute('src', 'js/default-page.js');\n            body.appendChild(script);\n          }\n\n          if (!anchor) {\n            window.history.replaceState({}, '', \"#infinite-mind-retreat?page=\".concat(pageId));\n          }\n\n          break;\n        }\n\n      default:\n        // Do nothing\n        break;\n    } // make sure loaded content starts at the top...\n\n\n    window.scroll(0, 0); // replay the anchor tag...\n\n    document.location = window.location.hash;\n  })[\"catch\"](function (error) {\n    console.error('Error:', error); // eslint-disable-line\n\n    window.location = 'pages/404.html';\n  });\n} // get route\n\n\nfunction onRouterEventHandler(e, article) {\n  if (e) e.preventDefault();\n  var hash = window.location.hash.split('?')[0];\n  var wpRoutes = JSON.parse(localStorage.wpRoutes).map(function (r) {\n    return r.slug;\n  });\n  var wpPageIds = JSON.parse(localStorage.wpRoutes).map(function (r) {\n    return r.pageId;\n  });\n\n  if (pathname === root && hash === '') {\n    hash = '#home';\n  }\n\n  if (routes.includes(hash)) {\n    var route = hash.replace(/#/g, '').split('?')[0];\n    getRouteContent(route, '', article);\n    return;\n  }\n\n  if (wpRoutes.includes(hash.replace('-1', ''))) {\n    var index = wpRoutes.findIndex(function (r) {\n      return r === hash;\n    });\n    getRouteContent('default-page', '', article, wpPageIds[index]);\n    return;\n  } // handle anchor hrefs\n\n\n  var dataRoutes = _toConsumableArray(document.querySelectorAll('[data-route]')).map(function (r) {\n    return r.dataset.route.replace('#', '');\n  });\n\n  var ids = _toConsumableArray(document.querySelectorAll('[id]')).map(function (id) {\n    return id.id;\n  }); // some anchors are also routes\n  // the main menu buttons work this way\n  // when on the home page the btns are anchors\n  // when on another page the btns take the\n  // user back to the home page and the anchors\n  // spot on the home page\n\n\n  var routesAll = [].concat(_toConsumableArray(ids), _toConsumableArray(dataRoutes));\n  var isAnchor = routesAll.some(function (route) {\n    return route === hash.replace('#', '');\n  });\n\n  if (!isAnchor) {\n    window.location = 'pages/404.html';\n    return;\n  } // if hash is an anchor on the home page\n\n\n  getRouteContent('home', window.location.hash.replace(/#/g, ''));\n}\n/**\n * When user refreshes the browser\n * onLoad event listener\n * Handler - anonymous function\n * @param {object} - event\n */\n\nwindow.addEventListener('load', function (e) {\n  var article = null;\n  var hash = window.location.hash;\n\n  if (hash.includes('article')) {\n    article = hash.slice(hash.indexOf('?article') + 9);\n  } // handle apache dev environment\n  // this should handle all environments\n\n\n  var _window$location$path = window.location.pathname.split(),\n      _window$location$path2 = _slicedToArray(_window$location$path, 1),\n      uriPath = _window$location$path2[0];\n\n  var _uriPath$replace$spli = uriPath.replace(root, '').split('/');\n\n  var _uriPath$replace$spli2 = _slicedToArray(_uriPath$replace$spli, 1);\n\n  uriPath = _uriPath$replace$spli2[0];\n\n  // handle path names\n  if (uriPath) {\n    window.location = \"\".concat(root, \"#\").concat(uriPath);\n    return;\n  }\n\n  onRouterEventHandler(e, article);\n}, false);\n/**\n * When user changes the URL\n * onHashchange event listener\n * Handler - anonymous function\n * @param {object} - event\n */\n\nwindow.addEventListener('hashchange', function (e) {\n  if (e.oldURL.split('?')[0] === e.newURL) {\n    window.history.replaceState({}, '', \"#infinite-mind-retreat?\".concat(e.oldURL.split('?')[1]));\n    return;\n  }\n\n  var article = null;\n  var hash = window.location.hash; // TODO: use articleNum() from dr-thoma-articles.js\n  // get article num\n\n  if (hash.includes('article')) {\n    article = hash.slice(hash.indexOf('?article') + 9);\n  } // if hash is in routes\n\n\n  if (routes.includes(hash.split('?')[0])) {\n    onRouterEventHandler(e, article);\n    return;\n  } // select all dom elements with id attributes\n\n\n  var idTags = document.querySelectorAll('[id]');\n  var ids = [];\n  idTags.forEach(function (tag) {\n    return ids.push(\"#\".concat(tag.id));\n  }); // if hash has a matching id on the page its an anchor link\n  // execute the onRouterEventHandler\n\n  if (!ids.includes(hash)) {\n    ids = [];\n    onRouterEventHandler();\n  }\n}, false); // these events might get used in a refactor of the router\n// window.addEventListener('beforeunload', () => {\n//   console.log('beforeunload');\n// }, false);\n// window.addEventListener('unload', () => {\n//   console.log('unload event');\n// }, false);\n\nwindow.addEventListener('error', function (err) {\n  console.error('error event', err); // eslint-disable-line\n}, false);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n\nvar articleTitle = document.querySelector('.article-title h1');\nvar thomaArticle = document.querySelector('.thoma-articles');\nvar nextArticleBtns = document.querySelectorAll('.next');\nvar previousArticleBtns = document.querySelectorAll('.previous');\nvar articleDate = document.querySelector('.page__article-nav--date');\n\nvar getArticleNum = function getArticleNum() {\n  var hash = window.location.hash;\n  var params = hash.split('?')[1];\n  var articleNum = params.slice(params.indexOf('article') + 8);\n  return Number(articleNum);\n};\n\nvar getArticleValue = function getArticleValue() {\n  var hash = window.location.hash;\n  var articleValue = Number(hash.split('article=')[1]);\n  return Number(articleValue);\n}; // get the page number from the article number\n\n\nvar getPage = function getPage() {\n  var page = 1;\n  var pageIndex = 0;\n  var articleNum = getArticleNum();\n  var articleAsIndex = (articleNum - 1).toString();\n  if (articleAsIndex.length === 1) return page;\n  pageIndex = Number(articleAsIndex.toString().slice(0, 1));\n  page = pageIndex + 1;\n  return page;\n}; // get article index of page array\n\n\nvar getArticleIndex = function getArticleIndex() {\n  var articleValue = getArticleValue();\n  var pageIndex = getPage() - 1;\n  var articleIndex = articleValue - pageIndex * 10 - 1;\n  return articleIndex;\n};\n\nif (getArticleNum() === 1) {\n  nextArticleBtns.forEach(function (btn) {\n    btn.classList.add('btn-disabled');\n  });\n}\n\nvar getArticles = function getArticles() {\n  var page = getPage();\n  fetch(\"http://wp.infinityspine.com/wp-json/wp/v2/posts?page=\".concat(page, \"&per_page=10\")).then(function (response) {\n    if (!response.ok) {\n      throw new Error('response.error');\n    }\n\n    return response.json();\n  }).then(function (posts) {\n    var articleNum = getArticleNum();\n    var articleIndex = getArticleIndex();\n\n    if (articleIndex + 1 >= posts.length) {\n      previousArticleBtns.forEach(function (btn) {\n        btn.classList.add('btn-disabled');\n      });\n      articleNum -= 1;\n      articleIndex -= 1;\n      window.history.replaceState({}, '', \"#dr-thoma-articles?article=\".concat(articleNum));\n    }\n\n    var date = posts[articleIndex].date.split('T')[0];\n    articleDate.innerHTML = date;\n    thomaArticle.innerHTML = posts[articleIndex].content.rendered;\n    articleTitle.innerHTML = posts[articleIndex].title.rendered;\n  })[\"catch\"](function () {\n    window.location = 'pages/404.html';\n  });\n};\n\ngetArticles();\n\nfunction blogPreviewBtnsClickHandler(e) {\n  // increment articleNum\n  var articleValue = getArticleValue() + 1;\n  var page = getPage();\n\n  if (articleValue >= page * 10 + 1) {\n    page += 1;\n    getArticles();\n  }\n\n  window.history.pushState(null, null, '#dr-thoma-articles');\n  Object(_router__WEBPACK_IMPORTED_MODULE_0__[/* onRouterEventHandler */ \"a\"])(e, articleValue);\n}\n\npreviousArticleBtns.forEach(function (btn) {\n  btn.addEventListener('click', blogPreviewBtnsClickHandler);\n});\n\nfunction blogNextBtnsClickHandler(e) {\n  // decrement articleNum\n  var articleValue = getArticleValue() - 1;\n  var page = getPage();\n\n  if (articleValue <= 0) {\n    articleValue = 1;\n    return;\n  }\n\n  if (articleValue <= page * 10 - 1) {\n    page -= 1;\n    getArticles();\n  }\n\n  window.history.pushState(null, null, '#dr-thoma-articles');\n  Object(_router__WEBPACK_IMPORTED_MODULE_0__[/* onRouterEventHandler */ \"a\"])(e, articleValue);\n}\n\nnextArticleBtns.forEach(function (btn) {\n  btn.addEventListener('click', blogNextBtnsClickHandler);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n")}]);